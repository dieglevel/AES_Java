/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aes;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Admin
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        text = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        key = new javax.swing.JTextField();
        numText = new javax.swing.JLabel();
        numKey = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        folder = new javax.swing.JTextField();
        checkBox = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        buttonMaHoa = new javax.swing.JButton();
        buttonGiaiMa = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cipher = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1201, 496));
        setMinimumSize(new java.awt.Dimension(1201, 496));
        setPreferredSize(new java.awt.Dimension(1201, 496));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 2, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AES - 128");
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, new java.awt.GridBagConstraints());

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        java.awt.GridBagLayout jPanel6Layout = new java.awt.GridBagLayout();
        jPanel6Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel6Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel6Layout.columnWeights = new double[] {10.0};
        jPanel6Layout.rowWeights = new double[] {5.0};
        jPanel6.setLayout(jPanel6Layout);

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel2.setText("Text/Cipher:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel6.add(jLabel2, gridBagConstraints);

        text.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        text.setMaximumSize(new java.awt.Dimension(800, 40));
        text.setMinimumSize(new java.awt.Dimension(800, 40));
        text.setPreferredSize(new java.awt.Dimension(800, 40));
        text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textActionPerformed(evt);
            }
        });
        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyTextType(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel6.add(text, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel3.setText("Key:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel6.add(jLabel3, gridBagConstraints);

        key.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        key.setMaximumSize(new java.awt.Dimension(800, 40));
        key.setMinimumSize(new java.awt.Dimension(800, 40));
        key.setPreferredSize(new java.awt.Dimension(800, 40));
        key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyActionPerformed(evt);
            }
        });
        key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keykeyText(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel6.add(key, gridBagConstraints);

        numText.setText("...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel6.add(numText, gridBagConstraints);

        numKey.setText("...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel6.add(numKey, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel7.setText("Folder:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel6.add(jLabel7, gridBagConstraints);

        folder.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        folder.setMaximumSize(new java.awt.Dimension(800, 40));
        folder.setMinimumSize(new java.awt.Dimension(800, 40));
        folder.setPreferredSize(new java.awt.Dimension(800, 40));
        folder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderActionPerformed(evt);
            }
        });
        folder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                folderkeyTextType(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanel6.add(folder, gridBagConstraints);

        checkBox.setText("Mã hóa phách");
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel6.add(checkBox, gridBagConstraints);

        jPanel3.add(jPanel6);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        buttonMaHoa.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonMaHoa.setText("Mã hóa");
        buttonMaHoa.setMaximumSize(new java.awt.Dimension(150, 50));
        buttonMaHoa.setMinimumSize(new java.awt.Dimension(150, 50));
        buttonMaHoa.setPreferredSize(new java.awt.Dimension(150, 50));
        buttonMaHoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maHoa(evt);
            }
        });
        buttonMaHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMaHoaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE;
        jPanel8.add(buttonMaHoa, gridBagConstraints);

        buttonGiaiMa.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonGiaiMa.setText("Giải mã");
        buttonGiaiMa.setMaximumSize(new java.awt.Dimension(150, 50));
        buttonGiaiMa.setMinimumSize(new java.awt.Dimension(150, 50));
        buttonGiaiMa.setPreferredSize(new java.awt.Dimension(150, 50));
        buttonGiaiMa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                giaiMa(evt);
            }
        });
        buttonGiaiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGiaiMaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE;
        gridBagConstraints.insets = new java.awt.Insets(0, 26, 0, 26);
        jPanel8.add(buttonGiaiMa, gridBagConstraints);

        jPanel3.add(jPanel8);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel4.setText("Cipher:");
        jPanel5.add(jLabel4);

        cipher.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cipher.setMaximumSize(new java.awt.Dimension(800, 40));
        cipher.setMinimumSize(new java.awt.Dimension(800, 40));
        cipher.setPreferredSize(new java.awt.Dimension(800, 40));
        cipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherActionPerformed(evt);
            }
        });
        jPanel5.add(cipher);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyActionPerformed

    private void buttonMaHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMaHoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonMaHoaActionPerformed

    private void buttonGiaiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGiaiMaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonGiaiMaActionPerformed

    private void maHoa(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maHoa
        
        
        if (checkBox.isSelected()){
            List<File> docxFiles = getDocxFiles(folder.getText());
            showFile(docxFiles);
            if (docxFiles != null){
                for (File docxFile : docxFiles) {
                    aes = new aesTest(docxFile.getName().substring(0, docxFile.getName().length()-5), key.getText());
                    String temp = aes.maHoa();
                    renameFileWithoutChangingExtension(docxFile, temp);
                }
            }
            else{
                cipher.setText("Khong tim thay thu muc");
            }
            cipher.setText("DONE");
            return;
        }
        aes = new aesTest(text.getText(), key.getText());
        cipher.setText(aes.maHoa());
        text.setText("");
        return;
        
    }//GEN-LAST:event_maHoa

    private void cipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cipherActionPerformed

    private void giaiMa(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_giaiMa
        // TODO add your handling code here:
        
        if (checkBox.isSelected()){
            List<File> docxFiles = getDocxFiles(folder.getText());
            showFile(docxFiles);
                if (docxFiles != null){
                    for (File docxFile : docxFiles) {
                        aes = new aesTest(docxFile.getName(), key.getText());
                        String temp = aes.giaiMa(docxFile.getName(), key.getText());
                        renameFileWithoutChangingExtension(docxFile, temp);
                    }
                }
                else{
                    cipher.setText("Khong tim thay thu muc");
                }
            cipher.setText("DONE");
            return;
        }
        cipher.setText(aes.giaiMa(text.getText(), key.getText()));
    }//GEN-LAST:event_giaiMa

    private void textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textActionPerformed

    private void keyTextType(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyTextType
        numText.setText(String.valueOf(text.getText().length()+1));
    }//GEN-LAST:event_keyTextType

    private void keykeyText(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keykeyText
        numKey.setText(String.valueOf(key.getText().length()+1));
    }//GEN-LAST:event_keykeyText

    private void folderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_folderActionPerformed

    private void folderkeyTextType(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folderkeyTextType
        // TODO add your handling code here:
    }//GEN-LAST:event_folderkeyTextType

    private void checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }
    
    
    
    public List<File> getDocxFiles(String directoryPath) {
        List<File> docxFiles = new ArrayList<>();

        File directory = new File(directoryPath);

        // Kiểm tra xem thư mục tồn tại
        if (directory.exists() && directory.isDirectory()) {
            File[] files = directory.listFiles();
            if (files != null) {
                for (File file : files) {
                    if (file.isFile() && file.getName().toLowerCase().endsWith(".docx")) {
                        docxFiles.add(file);
                    }
                }
            }
        } else {
            System.err.println("Thư mục không tồn tại hoặc không phải là thư mục.");
            return null;
        }

        return docxFiles;
    }
    
    public void showFile(List<File> docxFiles){
        for (File file : docxFiles) {
            System.out.println(file.getName());
        }
    }
    
//    public boolean renameFile(File oldFile, String newFileName) {
//        
//        File newFile = new File(newFileName);
//        
//        System.out.println("aes.UI.renameFile()"+ newFileName);
//        
//        System.out.println("aes.UI.renameFile()"+ oldFile.getName());
//
//        if (oldFile.exists() && !newFile.exists()) {
//            return oldFile.renameTo(newFile);
//        } else {
//            return false;
//        }
//    }
    
    public boolean renameFileWithoutChangingExtension(File file, String newFileName) {
        String parentDirectory = file.getParent();
        String newFilePath = parentDirectory + File.separator + newFileName+ ".docx";
        File newFile = new File(newFilePath);
        
        System.out.println("aes.UI.renameFile()"+ newFileName);

        if (!newFile.exists()) {
            System.out.println("aes.UI.renameFile()" + file.getName());
            return file.renameTo(newFile);
           
        } else {
            return false;
        }
    }
    
    
    
    
    
    // Khai báo
    aesTest aes = new aesTest();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonGiaiMa;
    private javax.swing.JButton buttonMaHoa;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JTextField cipher;
    private javax.swing.JTextField folder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField key;
    private javax.swing.JLabel numKey;
    private javax.swing.JLabel numText;
    private javax.swing.JTextField text;
    // End of variables declaration//GEN-END:variables
}
